services:
  cui-jwt-integration:
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile.native
      # Build optimization settings
      cache_from:
        - quay.io/quarkus/quarkus-distroless-image:2.0
      platforms:
        - linux/amd64
        - linux/arm64
    ports:
      - "10443:8443"
    environment:
      - QUARKUS_PROFILE=integration
      - QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_FILE=/app/certificates/keystore.p12
      - QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_PASSWORD=integration-test
    volumes:
      - ./src/main/docker/certificates:/app/certificates:ro
    
    # OWASP Security hardening configuration
    security_opt:
      - no-new-privileges:true
    
    # Drop all capabilities (principle of least privilege)
    cap_drop:
      - ALL
    
    # Read-only filesystem with tmpfs for temporary files
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
      - /app/tmp:rw,noexec,nosuid,size=50m
    
    # Resource limitations (DoS protection)
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '1.0'
        reservations:
          memory: 128M
          cpus: '0.5'
    
    # Health check using internal script
    healthcheck:
      test: ["CMD", "/app/health-check.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Network isolation
    networks:
      - jwt-network
    
    # Production restart policy
    restart: unless-stopped

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./src/main/docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - jwt-network
    depends_on:
      - cui-jwt-integration

networks:
  jwt-network:
    driver: bridge