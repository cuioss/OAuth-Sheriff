# JWT Integration Test Application Configuration

# Application metadata
quarkus.application.name=cui-jwt-integration-tests
quarkus.application.version=1.0.0-SNAPSHOT

# HTTPS Configuration for native image integration tests (using PEM certificates)
quarkus.http.ssl.certificate.files=/app/certificates/localhost.crt
quarkus.http.ssl.certificate.key-files=/app/certificates/localhost.key
quarkus.http.port=8080
quarkus.http.ssl-port=8443
# HTTPS Configuration - redirect HTTP requests to HTTPS for security
quarkus.http.insecure-requests=redirect

# JWT Configuration for Integration Testing
# Default issuer for static key testing (disabled for Docker integration tests)
cui.jwt.issuers.default.issuer-identifier=https://test-auth.example.com
cui.jwt.issuers.default.enabled=false
cui.jwt.issuers.default.jwks.file-path=classpath:test-jwks.json

# Keycloak issuer for well-known discovery testing (uses default mappers)
cui.jwt.issuers.keycloak.enabled=true
# JWKS URLs use internal Docker hostname for container-to-container communication
cui.jwt.issuers.keycloak.jwks.http.well-known-url=https://keycloak:8443/realms/benchmark/.well-known/openid-configuration
cui.jwt.issuers.keycloak.expected-client-id=benchmark-client
# Disable default mappers since benchmark realm uses protocol mappers directly
cui.jwt.issuers.keycloak.keycloak.mappers.default-roles.enabled=false
cui.jwt.issuers.keycloak.keycloak.mappers.default-groups.enabled=false
# Make subject claim optional for benchmark realm (Keycloak access tokens don't include 'sub' by default)
cui.jwt.issuers.keycloak.claim-sub-optional=true

# Integration issuer for direct JWKS URL testing (uses protocol mappers)
cui.jwt.issuers.integration.enabled=true
# IMPORTANT: issuer-identifier must match what Keycloak puts in tokens (Docker internal URL)
cui.jwt.issuers.integration.issuer-identifier=https://keycloak:8443/realms/integration
# JWKS URLs use Docker service name for container-to-container communication
cui.jwt.issuers.integration.jwks.http.url=https://keycloak:8443/realms/integration/protocol/openid-connect/certs
cui.jwt.issuers.integration.expected-client-id=integration-client
# This issuer uses traditional protocol mappers (no default mappers needed)
# Disable default mappers since protocol mappers are configured in realm
cui.jwt.issuers.integration.keycloak.mappers.default-roles.enabled=false
cui.jwt.issuers.integration.keycloak.mappers.default-groups.enabled=false
# Subject claim is required since protocol mapper provides it
cui.jwt.issuers.integration.claim-sub-optional=false


# Health Checks
cui.jwt.health.enabled=true
cui.jwt.health.jwks.cache-seconds=30
cui.jwt.health.jwks.timeout-seconds=5

# TLS Configuration for HTTPS endpoints with proper certificate validation
# Uses modern Quarkus TLS Registry for native image compatibility (research-based)
quarkus.ssl.native=true
quarkus.tls.default.trust-store.p12.path=/app/certificates/localhost-truststore.p12
quarkus.tls.default.trust-store.p12.password=localhost-trust

# Metrics - No explicit configuration needed, metrics are automatically enabled

# Logging
quarkus.log.level=INFO
quarkus.log.category."de.cuioss.jwt".level=INFO

# Development settings
quarkus.live-reload.instrumentation=false

# Native Image Configuration
# Enable HTTPS protocol for JWT well-known discovery and JWKS endpoints
# TESTING: INFO logging level impact on performance (was DEBUG)
quarkus.native.additional-build-args=--enable-url-protocols=https,--enable-http,--enable-https,--enable-monitoring=jfr,-O2
# Include certificates in native image
quarkus.native.resources.includes=**/*.p12,**/*.crt,**/*.key
# Container memory limit removed for build - will be applied at runtime via Docker
# Build requires unrestricted memory, runtime testing uses Docker --memory=64m

# REST Configuration (default: /)

# Virtual Threads Configuration (VERIFIED: 24-30% improvement)
quarkus.virtual-threads.name-prefix=jwt-validation
quarkus.virtual-threads.shutdown-timeout=10s

# REMOVED UNVERIFIED OPTIMIZATIONS FOR TESTING:
# - JFR monitoring: --enable-monitoring=jfr (needs verification)
# - Compiler optimization: -O2 (needs verification)
# - Memory runtime options: -m=256m (needs verification)
