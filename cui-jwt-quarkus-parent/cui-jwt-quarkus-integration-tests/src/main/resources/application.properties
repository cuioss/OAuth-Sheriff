# JWT Integration Test Application Configuration - PEM Certificate Format

# Application metadata
quarkus.application.name=cui-jwt-integration-tests
quarkus.application.version=1.0.0-SNAPSHOT

# HTTPS Configuration - Production TLS Setup
quarkus.http.ssl-port=8443
quarkus.http.insecure-requests=disabled

# TLS Configuration using PEM files (Docker volume mount paths)
quarkus.http.ssl.certificate.files=/app/certificates/localhost.crt
quarkus.http.ssl.certificate.key-files=/app/certificates/localhost.key

# Enhanced TLS Security Settings
quarkus.http.ssl.cipher-suites=TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_GCM_SHA256
quarkus.http.ssl.protocols=TLSv1.3,TLSv1.2

# JWT Configuration for Integration Testing
# Default issuer for static key testing
cui.jwt.issuers.default.url=https://test-auth.example.com
cui.jwt.issuers.default.enabled=true
cui.jwt.issuers.default.public-key-location=classpath:test-public-key.pem

# Keycloak issuer for JWKS testing
cui.jwt.issuers.keycloak.url=http://keycloak:8080/realms/benchmark
cui.jwt.issuers.keycloak.enabled=true
cui.jwt.issuers.keycloak.jwks.well-known-url=http://keycloak:8080/realms/benchmark/.well-known/openid_configuration

# Parser Configuration - simplified to use more defaults
cui.jwt.parser.validate-expiration=false

# Health Checks
cui.jwt.health.enabled=true

# Metrics  
cui.jwt.metrics.enabled=true

# Logging
quarkus.log.level=INFO
quarkus.log.category."de.cuioss.jwt".level=DEBUG
quarkus.log.category."de.cuioss.jwt.quarkus".level=DEBUG
quarkus.log.category."de.cuioss.jwt.quarkus".min-level=DEBUG
quarkus.log.category."io.quarkus.arc".level=DEBUG
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n

# Development settings
quarkus.live-reload.instrumentation=false