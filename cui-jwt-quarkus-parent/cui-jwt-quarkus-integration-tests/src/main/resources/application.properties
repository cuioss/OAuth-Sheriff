# JWT Integration Test Application Configuration

# Application metadata
quarkus.application.name=cui-jwt-integration-tests
quarkus.application.version=1.0.0-SNAPSHOT

# HTTPS Configuration for native image integration tests (using PEM certificates)
quarkus.http.ssl.certificate.files=/app/certificates/localhost.crt
quarkus.http.ssl.certificate.key-files=/app/certificates/localhost.key
quarkus.http.port=8080
quarkus.http.ssl-port=8443
# HTTPS Configuration - redirect HTTP requests to HTTPS for security
quarkus.http.insecure-requests=redirect

# JWT Configuration for Integration Testing
# Default issuer for static key testing (disabled for Docker integration tests)
cui.jwt.issuers.default.issuer-identifier=https://test-auth.example.com
cui.jwt.issuers.default.enabled=false
cui.jwt.issuers.default.jwks.file-path=classpath:test-jwks.json

# Keycloak issuer for well-known discovery testing (uses default mappers)
cui.jwt.issuers.keycloak.enabled=true
# IMPORTANT: issuer-identifier must match what Keycloak puts in tokens (Docker internal URL)
cui.jwt.issuers.keycloak.issuer-identifier=https://keycloak:8443/realms/benchmark
# JWKS URLs use internal Docker hostname for container-to-container communication
cui.jwt.issuers.keycloak.jwks.http.well-known-url=https://keycloak:8443/realms/benchmark/.well-known/openid-configuration
cui.jwt.issuers.keycloak.expected-client-id=benchmark-client
# Fast refresh for integration tests - retry every 10 seconds instead of 10 minutes
cui.jwt.issuers.keycloak.jwks.http.refresh-interval-seconds=10
# Disable default mappers since benchmark realm uses protocol mappers directly
cui.jwt.issuers.keycloak.keycloak.mappers.default-roles.enabled=false
cui.jwt.issuers.keycloak.keycloak.mappers.default-groups.enabled=false
# Make subject claim optional for benchmark realm (Keycloak access tokens don't include 'sub' by default)
cui.jwt.issuers.keycloak.claim-sub-optional=true

# Integration issuer for direct JWKS URL testing (uses protocol mappers)
cui.jwt.issuers.integration.enabled=true
# IMPORTANT: issuer-identifier must match what Keycloak puts in tokens (Docker internal URL)
cui.jwt.issuers.integration.issuer-identifier=https://keycloak:8443/realms/integration
# JWKS URLs use Docker service name for container-to-container communication
cui.jwt.issuers.integration.jwks.http.url=https://keycloak:8443/realms/integration/protocol/openid-connect/certs
cui.jwt.issuers.integration.expected-client-id=integration-client
# Fast refresh for integration tests - retry every 10 seconds instead of 10 minutes
cui.jwt.issuers.integration.jwks.http.refresh-interval-seconds=10
# This issuer uses traditional protocol mappers (no default mappers needed)
# Disable default mappers since protocol mappers are configured in realm
cui.jwt.issuers.integration.keycloak.mappers.default-roles.enabled=false
cui.jwt.issuers.integration.keycloak.mappers.default-groups.enabled=false
# Subject claim is required since protocol mapper provides it
cui.jwt.issuers.integration.claim-sub-optional=false


# Health Checks
cui.jwt.health.enabled=true
cui.jwt.health.jwks.cache-seconds=30
cui.jwt.health.jwks.timeout-seconds=5

# Security Provider Configuration
# Use default JCA providers for RSA operations

# TLS Configuration for HTTPS endpoints with proper certificate validation
# Uses modern Quarkus TLS Registry for native image compatibility (research-based)
quarkus.ssl.native=true
quarkus.tls.default.trust-store.p12.path=/app/certificates/localhost-truststore.p12
quarkus.tls.default.trust-store.p12.password=localhost-trust

# Metrics Configuration
# Set faster collection interval for integration tests (2s instead of default 10s)
cui.jwt.metrics.collection.interval=2s

# Cache Configuration for testing
# ENABLED for performance testing - cache size set to 20 tokens
cui.jwt.cache.access-token.max-size=20
cui.jwt.cache.access-token.eviction-interval-seconds=10

# Logging - Enhanced for troubleshooting
quarkus.log.level=INFO
quarkus.log.category."de.cuioss.jwt".level=INFO
# Enable health check logging
quarkus.log.category."io.quarkus.smallrye.health".level=INFO
# Enable startup logging
quarkus.log.category."io.quarkus.runtime".level=INFO
# Enable native image logging
quarkus.log.category."io.quarkus.runner".level=INFO
# Configure console logging format
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS z} %-5p [%c{3.}] (%t) %s%e%n
# File logging for persistent logs outside container
quarkus.log.file.enable=true
# Use system property LOG_FILE_PATH if set, otherwise default to /quarkus.log
quarkus.log.file.path=${LOG_FILE_PATH:/quarkus.log}
quarkus.log.file.level=INFO
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss,SSS z} %-5p [%c{3.}] (%t) %s%e%n
quarkus.log.file.rotation.max-file-size=100M
quarkus.log.file.rotation.max-backup-index=5

# HTTP Access Logging - Disable built-in access logging
quarkus.http.access-log.enabled=false

# Custom Access Log Filter Configuration - Log HTTP codes > 205
cui.http.access-log.filter.enabled=true
cui.http.access-log.filter.min-status-code=206
cui.http.access-log.filter.max-status-code=599

# Development settings
quarkus.live-reload.instrumentation=false

# Native Image Configuration
# Enable HTTPS protocol for JWT well-known discovery and JWKS endpoints
# TESTING: INFO logging level impact on performance (was DEBUG)
quarkus.native.additional-build-args=--enable-url-protocols=https,--enable-http,--enable-https,-O2
# Java 25 builder image for JEP 491 (Synchronize Virtual Threads without Pinning)
quarkus.native.builder-image=quay.io/quarkus/ubi9-quarkus-mandrel-builder-image:jdk-25

# JFR Configuration for Native Images (2024-2025 best practices)
quarkus.native.monitoring=jfr

# TLS Performance Optimization
# Enable TLS 1.3 with 1.2 fallback for better handshake performance
quarkus.tls.protocols=TLSv1.3,TLSv1.2
# Optimize cipher suites for performance (TLS 1.3 prioritized)
quarkus.tls.cipher-suites=TLS_AES_256_GCM_SHA384,TLS_CHACHA20_POLY1305_SHA256,TLS_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
# Enable ALPN for HTTP/2 support
quarkus.tls.alpn=true
# Include certificates in native image
quarkus.native.resources.includes=**/*.p12,**/*.crt,**/*.key
# Container memory limit removed for build - will be applied at runtime via Docker
# Build requires unrestricted memory, runtime testing uses Docker --memory=64m

# REST Configuration (default: /)

# Virtual Threads Configuration (VERIFIED: 24-30% improvement)
quarkus.virtual-threads.name-prefix=jwt-validation
quarkus.virtual-threads.shutdown-timeout=10s

# REMOVED UNVERIFIED OPTIMIZATIONS FOR TESTING:
# - JFR monitoring: --enable-monitoring=jfr (needs verification)
# - Compiler optimization: -O2 (needs verification)
# - Memory runtime options: -m=256m (needs verification)
