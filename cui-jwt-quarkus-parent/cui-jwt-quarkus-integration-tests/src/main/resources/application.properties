# JWT Integration Test Application Configuration

# Application metadata
quarkus.application.name=cui-jwt-integration-tests
quarkus.application.version=1.0.0-SNAPSHOT

# HTTPS Configuration for native image integration tests (using PEM certificates)
quarkus.http.ssl.certificate.files=/app/certificates/localhost.crt
quarkus.http.ssl.certificate.key-files=/app/certificates/localhost.key
quarkus.http.port=8080
quarkus.http.ssl-port=8443
# HTTPS Configuration - redirect HTTP requests to HTTPS for security
quarkus.http.insecure-requests=redirect

# JWT Configuration for Integration Testing
# Default issuer for static key testing (disabled for Docker integration tests)
cui.jwt.issuers.default.issuer-identifier=https://test-auth.example.com
cui.jwt.issuers.default.enabled=false
cui.jwt.issuers.default.jwks.file-path=classpath:test-jwks.json

# Keycloak issuer for well-known discovery testing
cui.jwt.issuers.keycloak.enabled=true
# JWKS URLs use internal Docker hostname for container-to-container communication
cui.jwt.issuers.keycloak.jwks.http.well-known-url=https://keycloak:8443/realms/benchmark/.well-known/openid-configuration
cui.jwt.issuers.keycloak.expected-client-id=benchmark-client

# Integration issuer for direct JWKS URL testing
cui.jwt.issuers.integration.enabled=true
# IMPORTANT: issuer-identifier must match what would be returned by well-known discovery
# For consistency with the keycloak issuer above, we use the internal Docker hostname
# This ensures proper issuer validation when JWKS is loaded
cui.jwt.issuers.integration.issuer-identifier=https://keycloak:8443/realms/integration
# JWKS URLs use internal Docker hostname for container-to-container communication
cui.jwt.issuers.integration.jwks.http.url=https://keycloak:8443/realms/integration/protocol/openid-connect/certs
cui.jwt.issuers.integration.expected-client-id=integration-client

# Health Checks
cui.jwt.health.enabled=true
cui.jwt.health.jwks.cache-seconds=30
cui.jwt.health.jwks.timeout-seconds=5

# TLS Configuration for HTTPS endpoints with proper certificate validation
# Uses modern Quarkus TLS Registry for native image compatibility
quarkus.ssl.native=true
quarkus.tls.default.trust-store.p12.path=/app/certificates/localhost-truststore.p12
quarkus.tls.default.trust-store.p12.password=localhost-trust

# Metrics - No explicit configuration needed, metrics are automatically enabled

# Logging
quarkus.log.level=INFO
quarkus.log.category."de.cuioss.jwt".level=DEBUG

# Development settings
quarkus.live-reload.instrumentation=false

# Native Image Configuration
# Enable HTTPS protocol for JWT well-known discovery and JWKS endpoints
quarkus.native.additional-build-args=--enable-url-protocols=https
# Include certificates in native image
quarkus.native.resources.includes=**/*.p12,**/*.crt,**/*.key

# REST Configuration
quarkus.rest.path=/
