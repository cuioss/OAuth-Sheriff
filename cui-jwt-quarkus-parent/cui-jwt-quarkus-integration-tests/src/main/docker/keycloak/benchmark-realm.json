{
  "realm": "benchmark",
  "enabled": true,
  "displayName": "JWT Benchmark Realm",
  "displayNameHtml": "<strong>JWT Benchmark</strong>",
  "accessTokenLifespan": 900,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "offlineSessionIdleTimeout": 2592000,
  "attributes": {
    "frontendUrl": "https://keycloak:8443"
  },
  "defaultSignatureAlgorithm": "RS256",
  "components": {
    "org.keycloak.keys.KeyProvider": [
      {
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "config": {
          "priority": ["100"],
          "enabled": ["true"],
          "active": ["true"],
          "keySize": ["2048"]
        }
      },
      {
        "name": "ecdsa-generated",
        "providerId": "ecdsa-generated",
        "config": {
          "priority": ["50"],
          "enabled": ["true"],
          "active": ["true"],
          "ecdsaEllipticCurveKey": ["P-256"]
        }
      }
    ]
  },
  "clients": [
    {
      "clientId": "benchmark-client",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "benchmark-secret",
      "redirectUris": ["*"],
      "webOrigins": ["*"],
      "protocol": "openid-connect",
      "publicClient": false,
      "serviceAccountsEnabled": true,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "defaultClientScopes": ["openid", "profile", "email", "roles", "web-origins", "read"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"],
      "attributes": {
        "post.logout.redirect.uris": "*",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      }
    }
  ],
  "users": [
    {
      "username": "benchmark-user",
      "enabled": true,
      "firstName": "Benchmark",
      "lastName": "User",
      "email": "benchmark@example.com",
      "credentials": [
        {
          "type": "password",
          "value": "benchmark-password",
          "temporary": false
        }
      ],
      "realmRoles": ["user"],
      "groups": ["/test-group"]
    }
  ],
  "groups": [
    {
      "name": "test-group",
      "path": "/test-group",
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {},
      "subGroups": []
    }
  ],
  "clientScopes": [
    {
      "name": "openid",
      "description": "OpenID Connect built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": []
    },
    {
      "name": "profile",
      "description": "OpenID Connect built-in scope for profile claims",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "full.path": "false",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "name": "email",
      "description": "OpenID Connect built-in scope for email claims",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "name": "read",
      "description": "Read access scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "name": "read-scope",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "benchmark-client",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        },
        {
          "name": "scope-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-scopes-mapper",
          "consentRequired": false,
          "config": {
            "access.token.claim": "true",
            "claim.name": "scope",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": ["openid", "profile", "email", "roles", "web-origins", "read"],
  "roles": {
    "realm": [
      {
        "name": "user",
        "description": "Standard user role for benchmarking"
      }
    ]
  }
}