<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>de.cuioss.jwt</groupId>
        <artifactId>cui-jwt-quarkus-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>cui-jwt-quarkus-integration-tests</artifactId>
    <packaging>jar</packaging>
    <name>JWT Token Validation Quarkus Integration Tests</name>
    <description>Integration tests for the CUI JWT Quarkus extension including native container testing with HTTPS support</description>

    <properties>
        <!-- Configure test execution - surefire skip, failsafe disabled by default -->
        <skipITs>true</skipITs>

        <!-- Native image build for integration tests - disabled by default -->
        <quarkus.native.container-build>false</quarkus.native.container-build>
        <quarkus.native.enabled>false</quarkus.native.enabled>

        <!-- HTTPS configuration for testing (Docker external port) -->
        <test.https.port>10443</test.https.port>

        <!-- Skip Sonar analysis for integration tests -->
        <sonar.skip>true</sonar.skip>
    </properties>

    <dependencies>
        <!-- JWT Extension Under Test -->
        <dependency>
            <groupId>de.cuioss.jwt</groupId>
            <artifactId>cui-jwt-quarkus</artifactId>
        </dependency>
        
        <!-- JWT Deployment Module for Quarkus Extension -->
        <dependency>
            <groupId>de.cuioss.jwt</groupId>
            <artifactId>cui-jwt-quarkus-deployment</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Quarkus Extensions for REST and Health -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-resteasy-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-smallrye-health</artifactId>
        </dependency>
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-micrometer-registry-prometheus</artifactId>
        </dependency>

        <!-- BouncyCastle JCA Provider for RSA Performance Testing -->
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk18on</artifactId>
            <version>1.78.1</version>
        </dependency>

        <!-- JWT Validation Test Utilities for key material -->
        <dependency>
            <groupId>de.cuioss.jwt</groupId>
            <artifactId>cui-jwt-validation</artifactId>
            <version>${project.version}</version>
            <classifier>generators</classifier>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Dev UI Testing Dependencies -->
        <dependency>
            <groupId>io.quarkus</groupId>
            <artifactId>quarkus-vertx-http-dev-ui-tests</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            
            <!-- Execute Docker cleanup before Maven clean -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${version.exec-maven-plugin}</version>
                <executions>
                    <execution>
                        <id>stop-docker-containers</id>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>./scripts/stop-integration-container.sh</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>--clean</argument>
                            </arguments>
                            <!-- Don't fail the build if containers aren't running -->
                            <successCodes>
                                <successCode>0</successCode>
                                <successCode>1</successCode>
                            </successCodes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Profile for running integration tests with distroless native image (no JFR) -->
        <profile>
            <id>integration-tests</id>
            <properties>
                <!-- Enable integration tests -->
                <skipITs>false</skipITs>
                
                <!-- Container-based native build with optimized rebuild detection -->
                <quarkus.native.container-build>true</quarkus.native.container-build>
                <quarkus.native.enabled>true</quarkus.native.enabled>
            </properties>
            <build>
                <plugins>
                    
                    <!-- Quarkus plugin (build only on-demand via script) -->
                    <plugin>
                        <groupId>io.quarkus</groupId>
                        <artifactId>quarkus-maven-plugin</artifactId>
                        <!-- No default executions - only build when called explicitly -->
                    </plugin>
                    
                    <!-- Skip Unit Tests (Surefire) -->
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>true</skipTests>
                            <!-- Fix argLine placeholder issue inherited from parent -->
                            <argLine>-XX:+IgnoreUnrecognizedVMOptions -Djava.awt.headless=true</argLine>
                        </configuration>
                    </plugin>

                    <!-- Integration Test Configuration -->
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>**/integration/**/*IT.java</include>
                                    </includes>
                                    <!-- Fix argLine placeholder issue inherited from parent -->
                                    <argLine>-XX:+IgnoreUnrecognizedVMOptions -Djava.awt.headless=true</argLine>
                                    <systemPropertyVariables>
                                        <test.https.port>${test.https.port}</test.https.port>
                                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                                        <quarkus.native.enabled>false</quarkus.native.enabled>
                                    </systemPropertyVariables>
                                    <skipITs>${skipITs}</skipITs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Docker build and application lifecycle -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${version.exec-maven-plugin}</version>
                        <executions>
                            <!-- Build Docker image (native executable must already exist) -->
                            <execution>
                                <id>docker-build-distroless</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>docker</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                    <arguments>
                                        <argument>compose</argument>
                                        <argument>build</argument>
                                        <argument>cui-jwt-integration-tests</argument>
                                    </arguments>
                                    <environmentVariables>
                                        <DOCKERFILE>Dockerfile.native.distroless</DOCKERFILE>
                                        <DOCKER_IMAGE_TAG>distroless</DOCKER_IMAGE_TAG>
                                        <DOCKER_BUILDKIT>1</DOCKER_BUILDKIT>
                                    </environmentVariables>
                                </configuration>
                            </execution>
                            <!-- Start application before integration tests -->
                            <execution>
                                <id>start-integration-app</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>./scripts/start-integration-container.sh</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                </configuration>
                            </execution>
                            <!-- Stop application after integration tests -->
                            <execution>
                                <id>stop-integration-app</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>./scripts/stop-integration-container.sh</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- Profile for JFR profiling with UBI-based images -->
        <profile>
            <id>jfr</id>
            <properties>
                <!-- Enable integration tests -->
                <skipITs>false</skipITs>
                
                <!-- Container-based native build with JFR support -->
                <quarkus.native.container-build>true</quarkus.native.container-build>
                <quarkus.native.enabled>true</quarkus.native.enabled>
                <!-- JFR-specific native build options -->
                <quarkus.native.additional-build-args>--enable-monitoring=heapdump,jfr</quarkus.native.additional-build-args>
            </properties>
            <build>
                <plugins>
                    
                    <!-- Quarkus plugin with JFR support (build only on-demand via script) -->
                    <plugin>
                        <groupId>io.quarkus</groupId>
                        <artifactId>quarkus-maven-plugin</artifactId>
                        <!-- No default executions - only build when called explicitly -->
                    </plugin>
                    
                    <!-- Skip Unit Tests (Surefire) -->
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skipTests>true</skipTests>
                            <!-- Fix argLine placeholder issue inherited from parent -->
                            <argLine>-XX:+IgnoreUnrecognizedVMOptions -Djava.awt.headless=true</argLine>
                        </configuration>
                    </plugin>

                    <!-- Integration Test Configuration for JFR -->
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <includes>
                                        <include>**/integration/**/*IT.java</include>
                                    </includes>
                                    <!-- Fix argLine placeholder issue inherited from parent -->
                                    <argLine>-XX:+IgnoreUnrecognizedVMOptions -Djava.awt.headless=true</argLine>
                                    <systemPropertyVariables>
                                        <test.https.port>${test.https.port}</test.https.port>
                                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                                        <quarkus.native.enabled>false</quarkus.native.enabled>
                                    </systemPropertyVariables>
                                    <skipITs>${skipITs}</skipITs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Docker build and application lifecycle -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${version.exec-maven-plugin}</version>
                        <executions>
                            <!-- Build Docker image with JFR support (native executable must already exist) -->
                            <execution>
                                <id>docker-build-jfr</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>docker</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                    <arguments>
                                        <argument>compose</argument>
                                        <argument>build</argument>
                                        <argument>cui-jwt-integration-tests</argument>
                                    </arguments>
                                    <environmentVariables>
                                        <DOCKERFILE>Dockerfile.native.jfr</DOCKERFILE>
                                        <DOCKER_IMAGE_TAG>jfr</DOCKER_IMAGE_TAG>
                                        <DOCKER_BUILDKIT>1</DOCKER_BUILDKIT>
                                    </environmentVariables>
                                </configuration>
                            </execution>
                            <!-- Start application before integration tests -->
                            <execution>
                                <id>start-integration-app</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>./scripts/start-integration-container.sh</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                </configuration>
                            </execution>
                            <!-- Stop application after integration tests -->
                            <execution>
                                <id>stop-integration-app</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>./scripts/stop-integration-container.sh</executable>
                                    <workingDirectory>${project.basedir}</workingDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
