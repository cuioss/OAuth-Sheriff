@startuml
!include plantuml.skin

interface "Serializable" as Serializable {
}

interface "MinimalTokenContent" as MinimalTokenContent {
  +getRawToken(): String
  +getTokenType(): TokenType
}

interface "TokenContent" as TokenContent {
  +getClaims(): Map<String, ClaimValue>
  +getClaimOption(name: ClaimName): Optional<ClaimValue>
  +getIssuer(): String
  +getSubject(): Optional<String>
  +getExpirationTime(): OffsetDateTime
  +getIssuedAtTime(): OffsetDateTime
  +getNotBefore(): Optional<OffsetDateTime>
  +isExpired(context: ValidationContext): boolean
}

abstract class "BaseTokenContent" as BaseTokenContent {
  -claims: Map<String, ClaimValue>
  -rawToken: String
  -tokenType: TokenType
  -rawPayload: MapRepresentation
}

class "AccessTokenContent" as AccessTokenContent {
  -email: String
  +getAudience(): Optional<List<String>>
  +getScopes(): List<String>
  +getRoles(): List<String>
  +getGroups(): List<String>
  +getEmail(): Optional<String>
  +getPreferredUsername(): Optional<String>
  +providesScopes(expectedScopes: Collection<String>): boolean
  +providesRoles(expectedRoles: Collection<String>): boolean
  +providesGroups(expectedGroups: Collection<String>): boolean
  +providesScopesAndDebugIfScopesAreMissing(...): boolean
  +providesRolesAndDebugIfRolesMissing(...): boolean
  +providesGroupsAndDebugIfGroupsMissing(...): boolean
  +determineMissingScopes(expectedScopes: Collection<String>): Set<String>
  +determineMissingRoles(expectedRoles: Collection<String>): Set<String>
  +determineMissingGroups(expectedGroups: Collection<String>): Set<String>
}

class "IdTokenContent" as IdTokenContent {
  +getAudience(): List<String>
  +getName(): Optional<String>
  +getEmail(): Optional<String>
}

class "RefreshTokenContent" as RefreshTokenContent {
  -rawToken: String
  -claims: Map<String, ClaimValue>
  +getTokenType(): TokenType
}

enum "TokenType" as TokenType {
  ACCESS_TOKEN
  ID_TOKEN
  REFRESH_TOKEN
  UNKNOWN
  +fromTypClaim(typeClaimName: String): TokenType
}

Serializable <|-- MinimalTokenContent
MinimalTokenContent <|-- TokenContent
TokenContent <|.. BaseTokenContent
MinimalTokenContent <|.. RefreshTokenContent
BaseTokenContent <|-- AccessTokenContent
BaseTokenContent <|-- IdTokenContent

note bottom of AccessTokenContent
  OAuth2 Access Token
  Used for authorization
end note

note bottom of IdTokenContent
  OpenID Connect ID Token
  Used for authentication
end note

note bottom of RefreshTokenContent
  OAuth2 Refresh Token
  Used to obtain new access tokens
end note

@enduml
