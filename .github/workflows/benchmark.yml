name: Performance Benchmark

on:
  pull_request:
    branches: [ "main" ]
    types: [ closed ]
  push:
    tags: [ "*" ]
  workflow_dispatch:

# Declare default permissions as read only
permissions: read-all

# Prevent concurrent benchmark runs to avoid interference
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false  # Don't cancel in-progress runs as benchmarks are expensive

jobs:
  benchmark:
    name: Run JMH Benchmarks
    runs-on: ubuntu-latest
    # Only run on merged PRs, not just closed ones
    if: github.event_name != 'pull_request' || github.event.pull_request.merged == true
    # Add timeout to prevent long-running jobs (increased for integration benchmarks)
    timeout-minutes: 45
    permissions:
      # Needed to upload artifacts
      contents: write

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0  # Fetch all history for proper versioning

      - name: Set up JDK 21
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build cui-jwt-validation
        run: |
          # Build validation module first to ensure test artifact is available for benchmarking
          ./mvnw --no-transfer-progress clean install -DskipTests

      - name: Run Micro Benchmarks
        run: |
          # Create directory for benchmark results
          mkdir -p benchmark-results

          # Run micro benchmarks using configuration from pom.xml
          ./mvnw --no-transfer-progress clean verify -pl cui-jwt-benchmarking -Pbenchmark

          # Move micro benchmark results to expected location for upload
          if [ -d "cui-jwt-benchmarking/target/benchmark-results" ]; then
            echo "Moving micro benchmark results to upload location..."
            mv cui-jwt-benchmarking/target/benchmark-results/* benchmark-results/ 2>/dev/null || true
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.7.1

      - name: Run Integration Benchmarks
        run: |
          # Run integration benchmarks with native image using profile
          echo "üöÄ Running integration benchmarks with native Quarkus..."
          ./mvnw --no-transfer-progress clean verify -pl quarkus-integration-jmh -Pbenchmark -DskipTests

          # Move integration benchmark results to expected location for upload
          if [ -d "quarkus-integration-jmh/target/benchmark-results" ]; then
            echo "Moving integration benchmark results to upload location..."
            # Copy health check and JWT validation results
            cp quarkus-integration-jmh/target/benchmark-results/health-check-results.json benchmark-results/ 2>/dev/null || echo "No health check results"
            cp quarkus-integration-jmh/target/benchmark-results/jwt-validation-results.json benchmark-results/ 2>/dev/null || echo "No JWT validation results"
          fi

          # Add timestamp to results
          echo "{ \"timestamp\": \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\", \"commit\": \"${{ github.sha }}\" }" > benchmark-results/metadata.json

          # Verify that benchmark results were generated
          echo "Checking for benchmark results..."
          ls -la benchmark-results/
          find . -name "*benchmark-result*.json" -type f || echo "No benchmark result files found anywhere"

      - name: Upload benchmark results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: benchmark-results
          path: benchmark-results/
          retention-days: 90  # Keep results for 90 days

      - name: Process All Benchmarks
        run: |
          # Get current date for badge timestamp in Berlin time
          TIMESTAMP=$(TZ='Europe/Berlin' date +"%Y-%m-%d")
          TIMESTAMP_WITH_TIME=$(TZ='Europe/Berlin' date +"%Y-%m-%d %H:%M %Z")

          # Create gh-pages directory
          mkdir -p gh-pages

          # Process all benchmarks using orchestration script
          bash cui-jwt-benchmarking/scripts/process-all-benchmarks.sh \
            benchmark-results \
            cui-jwt-benchmarking/doc/templates \
            gh-pages \
            "${{ github.sha }}" \
            "$TIMESTAMP" \
            "$TIMESTAMP_WITH_TIME"

          echo "üìä Benchmark processing completed"
          
          # Display processing results for debugging
          if [ -f "gh-pages/processing-results.json" ]; then
            echo "üìã Processing Summary:"
            jq -r '
              "üî¨ Micro Benchmarks: " + .processing.micro.status + " - " + .processing.micro.message,
              "üîó Integration Benchmarks: " + .processing.integration.status + " - " + .processing.integration.message,
              "‚ùå Errors: " + (.errors | length | tostring)
            ' gh-pages/processing-results.json
          fi

      - name: Deploy to cuioss.github.io
        uses: JamesIves/github-pages-deploy-action@6c2d9db40f9296374acc17b90404b6e8864128c8 # v4.7.3
        with:
          folder: gh-pages
          repository-name: cuioss/cuioss.github.io
          target-folder: cui-jwt/benchmarks
          branch: main
          token: ${{ secrets.PAGES_DEPLOY_TOKEN }}
